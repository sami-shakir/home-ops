---
####################
### Root Crontab ###
####################

- name: Cron - Mount check
  ansible.builtin.cron:
    name: mount check
    minute: "*/10"
    user: root
    job: "if [ $(grep '{{ user_dir }}/mount/' /proc/mounts | wc -l) -lt 3 ]; then mount -a; logger 'mounted NAS'; fi"

#########################
### main_user Crontab ###
#########################

- name: Creates PATH environment variable on top of crontab
  ansible.builtin.cron:
    name: PATH
    env: yes
    user: "{{ main_user }}"
    job: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin

# Disabling this one for the time being as it is breaking my containers sometimes..
# Will perhaps get ride of it altogether as I have watchtower
# - name: Cron - Update docker containers daily
#   ansible.builtin.cron:
#     name: update docker containers daily
#     minute: "0"
#     hour: "4"
#     user: "{{ main_user }}"
#     job: "bash -ic \"dcpull all; dstopall; drmcont; dcup all\" 2>&1 | logger -t dockerlogs"
#    # job: "cd {{ docker_dir }}; /usr/local/bin/docker-compose pull; /usr/local/bin/docker-compose up -d --remove-orphans"

- name: Cron - Start Docker containers at boot
  ansible.builtin.cron:
    name: start docker containers at boot
    special_time: reboot
    user: "{{ main_user }}"
    job: "bash -ic \"dcup all\" 2>&1 | logger -t dockerlogs"
    # job: "cd {{ docker_dir }}; /usr/local/bin/docker-compose up -d --remove-orphans"

- name: Cron - Prune > 7 day old unused Docker images daily
  ansible.builtin.cron:
    name: prune docker images daily ( > 7 day old )
    minute: "0"
    hour: "3"
    user: "{{ main_user }}"
    job: "/usr/bin/docker system prune -af  --filter 'until=168h'"

- name: Cron - Remove unused Docker volumes weekly
  ansible.builtin.cron:
    name: prune docker images daily ( > 7 day old )
    minute: "0"
    hour: "2"
    weekday: "5"
    user: "{{ main_user }}"
    job: "/usr/bin/docker volume prune"
