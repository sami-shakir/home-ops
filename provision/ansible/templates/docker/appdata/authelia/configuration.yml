#######################################
### THIS FILE IS MANAGED BY ANSIBLE ###
###    PLEASE MAKE CHANGES THERE    ###
#######################################
# Master template here -> https://github.com/authelia/authelia/blob/master/config.template.yml
---
server:
  host: 0.0.0.0
  port: 9091
log:
  # Level of verbosity for logs: info, debug, trace.
  level: debug

# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE
jwt_secret: {{ authelia.jwt_secret }} # use docker secret file instead AUTHELIA_JWT_SECRET_FILE
theme: dark
default_redirection_url: "https://home.{{ domain_name }}"

totp:
  issuer: authelia.com

# duo_api:
#  hostname: api-123456789.example.com
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: 1234567890abcdefghifjkl

authentication_backend:
  file:
    path: /config/users_database.yml
    password:
      algorithm: argon2id
      iterations: 1
      salt_length: 16
      parallelism: 8
      memory: 64

access_control:
  default_policy: deny
  # Define networks
  networks:
    - name: lan
      networks:
      - {{ local_network_lan }}
    - name: iot
      networks:
      - {{ local_network_iot }}
    - name: homelab
      networks:
      - {{ local_network_homelab }}
    - name: docker
      networks:
      - 192.168.90.0/23
  # Define Rules
  ## Note: the ORDERING of the rules is important. The first policy matching (domain, resource, subject) applies.
  rules:
    # Authelia access applied to everyone
    - domain:
      - "{{ domain_name }}"
      - "auth.{{ domain_name }}"
      - "authelia.{{ domain_name }}"
      - "api.{{ domain_name }}"
      policy: bypass
    # Bypass local subnets for hass.
    - domain:
      - "hass.{{ domain_name }}"
      - "home-assistant.{{ domain_name }}"
      networks:
        - lan
        - iot   # For hass dashboard casting to google hub
        - homelab
        - docker
      policy: bypass
    # Bypass other domains for certain local subnets only
    - domain:
      - "tv.{{ domain_name }}"
      - "overseerr.{{ domain_name }}"
      - "docs.{{ domain_name }}"
      - "home.{{ domain_name }}"
      - "homer.{{ domain_name }}"
      networks:
        - lan
        - homelab
        - docker
      policy: bypass
    # Bypass internet access to Technical Docs, homepage and required assets
    - domain: "docs.{{ domain_name }}"
      resources:
      - '^/Technical.*'
      - '^(\/?$|.*\.css$|.*\.js$|.*\.png$|.*\.bmp$|.*\.jpg$|.*\.jpeg$|.*\.svg$|.*\.pdf$|.*\.json$)'
      policy: bypass
    # Anyone not a family member is not allowed access to my private stash of docs, soz <3
    - domain: "docs.{{ domain_name }}"
      subject: "group:not-family"
      resources:
      - '/[sS][aA][mM][iI]/.*'
      policy: deny
    # Users accessing overseerr
    - domain:
      - "tv.{{ domain_name }}"
      - "overseerr.{{ domain_name }}"
      subject: "group:users"
      policy: one_factor
    # For admins accessing proxmox
    - domain: "proxmox.{{ domain_name }}"
      subject: "group:admins"
      policy: two_factor
    # For household group (house members)
    - domain:
      - "hass.{{ domain_name }}"
      - "docs.{{ domain_name }}"
      subject: "group:household"
      policy: one_factor
    # Allowing admins group, singla factor auth on wildcard subdomain catch-all
    - domain: '*.{{ domain_name }}'
      subject: "group:admins"
      policy: one_factor
    # Allowing Work peeps access to resources
    - domain: "docs.{{ domain_name }}"
      subject: "group:work"
      policy: one_factor

session:
  name: authelia_session
  domain: "{{ domain_name }}"  # Should match whatever your root protected domain is
  # same_site: lax    # Doco -> https://www.authelia.com/docs/configuration/session/#same_site
  # This secret is set using the env variables AUTHELIA_SESSION_SECRET
  # secret: unsecure_session_secret # use docker env instead AUTHELIA_SESSION_SECRET
  expiration: 1w  # 1 week -> https://www.authelia.com/docs/configuration/#duration-notation-format-unit-legend
  inactivity: 5m  # 5 minutes
  remember_me_duration: 1M      # 1 Month?

  redis:
    host: {{ redis.host }}
    port: {{ redis_port }}
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD
    # password: authelia

regulation:
  # The number of failed login attempts before user is banned. Set it to 0 to disable regulation.
  max_retries: 3
  # The time range during which the user can attempt login before being banned. The user is banned if the
  # authentication failed 'max_retries' times in a 'find_time' seconds window. Find Time accepts duration notation.
  # See: https://www.authelia.com/docs/configuration/index.html#duration-notation-format
  find_time: 2m
  # The length of time before a banned user can login again. Ban Time accepts duration notation.
  # See: https://www.authelia.com/docs/configuration/index.html#duration-notation-format
  ban_time: 5m

## Storage Provider Configuration
storage:
  encryption_key: "{{ authelia.storage_encryption_key }}" # Now required
  # local:
  #   path: /config/db.sqlite3
  mysql:
  # MySQL allows running multiple authelia instances. Create database and enter details below.
    host: {{ docker_ip }}
    port: {{ mariadb_port }}
    database: {{ authelia.database.name }}
    username: {{ authelia.database.username }}
    # Password can also be set using a secret: https://docs.authelia.com/configuration/secrets.html
    password: {{ authelia.database.password }}
    timeout: 20s

notifier:
  smtp:   # Maybe checkout mailgun.com in the future.
    username: "{{ gmail_address }}"
    # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
    password: "{{ gmail_pass }}"    # The gmail password you use to login with, NOT the gmail_app_pass
    host: "{{ authelia.smtp.host }}"
    port: "{{ authelia.smtp.port }}"  # 465 for SSL
    sender: "{{ authelia.smtp.sender }}"
  # For testing purpose, notifications can be sent in a file. Be sure map the volume in docker-compose.
  # filesystem:
  #   filename: /config/notification.txt
