---
#######################################
### THIS FILE IS MANAGED BY ANSIBLE ###
###    PLEASE MAKE CHANGES THERE    ###
#######################################

version: "3.7"

########################### EXTENSION FIELDS

# Default TZ, uid and pid
# To use this put this block in your service: "<<: *default-tz-uid-gid"
x-environment: &default-tz-uid-gid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

# To use this put this block in your service: "<<: *logging"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://${SERVER_IP}:${LOKI_PORT}/loki/api/v1/push"

########################### NETWORKS

networks:
  traefik_proxy:
    name: traefik_proxy
    external: true

########################### SERVICES

services:
  ### IMPORTANT: If this container connects but is not tranmitting packets via wireguard, get a new private key and recreate the containers:
  ### source ~/docker/.env && docker run --rm --cap-add=NET_ADMIN -e USER=${VPN_USER} -e PASS=${VPN_PASS} bubuntux/nordvpn:get_private_key
  ### Now, update private key to `.env` file and recreate the containers with `dcrec torrent` (alias).
  # NordVPN
  # https://hub.docker.com/r/bubuntux/nordlynx
  nordlynx:
    container_name: nordlynx
    image: ghcr.io/bubuntux/nordlynx
    restart: always
    # This is the healtcheck (default created by container devs) that autoheal will use:
    # "Healthcheck": {
    #   "Test": [
    #     "CMD-SHELL",
    #     "[ $(( $(date -u +%s) - $(wg show wg0 latest-handshakes | awk '{print $2}') )) -le 120 ] || exit 1"
    #   ]
    # },
    cap_add:
      - NET_ADMIN   # required
    networks:
      - traefik_proxy
    ports:
      - ${QBITTORRENT_PORT}:${QBITTORRENT_PORT}   # qbittorrent
      - ${TRANSMISSION_PORT}:9091   # Transmission
      - 51413:51413                 # Transmission
      - 51413:51413/udp             # Transmission
    environment:
      PRIVATE_KEY: ${NORDVPN_PRIVATE_KEY}   # required
      DNS: "1.1.1.1,8.8.8.8,1.0.0.1"
      NET_LOCAL: "${LOCAL_NETWORK_LAN},${LOCAL_NETWORK_HOMELAB}"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1  # May be required. (depends on multiple factors)
      - net.ipv6.conf.all.disable_ipv6=1    # Recomended if using ipv4 only
    <<: *logging

  # qBittorrent - Torrent downloader
  # https://hub.docker.com/r/linuxserver/qbittorrent
  # Needs trailing / if using PathPrefixStrip
  qbittorrent:
    container_name: qbittorrent
    image: linuxserver/qbittorrent:latest
    restart: always
    healthcheck:
      test: curl -sI http://localhost:${QBITTORRENT_PORT}
      interval: 60s
      timeout: 3s
      retries: 3
    network_mode: service:nordlynx
    depends_on:
      - nordlynx
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${DOCKERDIR}/appdata/qbittorrent:/config
      - ${USERDIR}/mount/downloads:/downloads
    environment:
      <<: *default-tz-uid-gid
      # UMASK: 002
      WEBUI_PORT: ${QBITTORRENT_PORT}
    # ports:
    #   - 8168:8168   # Web UI
    #   - 6881:6881
    #   - 6881:6881/udp
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.qbittorrent-rtr.entrypoints=https"
      - "traefik.http.routers.qbittorrent-rtr.rule=Host(`qbit.$DOMAINNAME`, `qbittorrent.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.qbittorrent-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.qbittorrent-rtr.service=qbittorrent-svc"
      - "traefik.http.services.qbittorrent-svc.loadbalancer.server.port=${QBITTORRENT_PORT}"
    <<: *logging

  # Transmission for *arr apps
  # https://hub.docker.com/r/linuxserver/transmission/
  transmission:
    container_name: transmission
    image: lscr.io/linuxserver/transmission
    restart: always
    network_mode: service:nordlynx
    depends_on:
      - nordlynx
    environment:
      <<: *default-tz-uid-gid
      # TRANSMISSION_WEB_HOME: /transmission-web-control/   # optional theme
      # WHITELIST: ${LOCAL_NETWORK}   # optional
      # - HOST_WHITELIST=dnsnane list #optional
      # - USER=username #optional
      # - PASS=password #optional
    volumes:
      - ${DOCKERDIR}/appdata/transmission/config:/config
      - ${USERDIR}/mount/downloads:/downloads
      - ${DOCKERDIR}/appdata/transmission/watch:/watch
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - ${TRANSMISSION_PORT}:9091
    #   - 51413:51413
    #   - 51413:51413/udp
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.transmission-vpn-rtr.entrypoints=https"
      - "traefik.http.routers.transmission-vpn-rtr.rule=Host(`transmission.$DOMAINNAME`, `torrent.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.transmission-vpn-rtr.middlewares=chain-oauth@file"  # Testing oauth
      # - "traefik.http.routers.transmission-vpn-rtr.middlewares=middlewares-rate-limit@file" # If oauth doesn't work because it uses a vpn, we need to at least rate limit
      ## HTTP Services
      - "traefik.http.routers.transmission-vpn-rtr.service=transmission-vpn-svc"
      - "traefik.http.services.transmission-vpn-svc.loadbalancer.server.port=9091"
    <<: *logging
