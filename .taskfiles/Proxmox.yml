---
version: "3"

tasks:

  main:
    desc: üñ•Ô∏è Main Proxmox playbook
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini playbooks/proxmox.yml {{.CLI_ARGS}}

  run-tags:
    desc: üñ•Ô∏è Run only the tags passed in separated by comma
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini --tags {{.CLI_ARGS}} -e "{{.CLI_ARGS}}=true" playbooks/proxmox.yml

  run-tags-v:
    desc: üñ•Ô∏è VERBOSE - Run only the tags passed in separated by comma
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini --tags {{.CLI_ARGS}} -e "{{.CLI_ARGS}}=true" playbooks/proxmox.yml -vvvv

  ubuntu-vm-template:
    desc: üñ•Ô∏è Create Ubuntu VM Template in Proxmox.
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini --tags "create_ubuntu_vm_template" -e "create_ubuntu_vm_template=true" playbooks/proxmox.yml {{.CLI_ARGS}}

  force-ubuntu-vm-template:
    desc: üñ•Ô∏è Force (re)create/(re)download Ubuntu VM Template in Proxmox from public ubuntu cloud-init image. Essentially if you want to remake the image from scratch, make this target.
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini --tags "create_ubuntu_vm_template" -e "create_ubuntu_vm_template=true force_template_rebuild=true" playbooks/proxmox.yml {{.CLI_ARGS}}

  debian-vm-template:
    desc: üñ•Ô∏è Create Debian VM Template in Proxmox.
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini --tags "create_debian_vm_template" -e "create_debian_vm_template=true" playbooks/proxmox.yml {{.CLI_ARGS}}

  force-debian-vm-template:
    desc: üñ•Ô∏è Force (re)create/(re)download Debian VM Template in Proxmox from public debian cloud-init image. Essentially if you want to remake the image from scratch, make this target.
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini --tags "create_debian_vm_template" -e "create_debian_vm_template=true force_template_rebuild=true" playbooks/proxmox.yml {{.CLI_ARGS}}

  provision-tags:
    desc: üñ•Ô∏è Provision based on tags passed in. Check tags on the plays in `playbooks/proxmox.yml` for more info. e.g. `make proxmox-provision-blah`
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini -e "provision_vms=true" --tags {{.CLI_ARGS}} playbooks/proxmox.yml

  provision-lxc:
    desc: üñ•Ô∏è Provision LXC's.
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini playbooks/proxmox.yml --tags proxmox-provision-lxc {{.CLI_ARGS}}

  provision-docker:
    desc: üñ•Ô∏è Provision docker vm.
    dir: provision/ansible
    cmds:
      - ansible-playbook -i inventory/hosts.ini playbooks/proxmox.yml --tags proxmox-provision-docker {{.CLI_ARGS}}
